name: Build Ubuntu Image

on:
  push:
    branches: [main]
  schedule:
    - cron: '0 2 * * 1'  # Weekly builds
  workflow_dispatch:

env:
  UBUNTU_VERSION: "24.04"
  PACKER_VERSION: "1.10.3"

jobs:
  build-image:
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Setup Packer
      uses: hashicorp/setup-packer@main
      with:
        version: ${{ env.PACKER_VERSION }}

    - name: Install QEMU/KVM
      run: |
        sudo apt-get update
        sudo apt-get install -y qemu-kvm qemu-system-x86-64 qemu-utils
        sudo modprobe kvm
        sudo chmod 666 /dev/kvm

    - name: Download Ubuntu cloud image
      working-directory: ./packer
      run: |
        wget https://cloud-images.ubuntu.com/releases/${{ env.UBUNTU_VERSION }}/release/ubuntu-${{ env.UBUNTU_VERSION }}-server-cloudimg-amd64.img

    - name: Initialize Packer
      working-directory: ./packer
      run: packer init ubuntu.pkr.hcl

    - name: Validate Packer configuration
      working-directory: ./packer
      run: packer validate ubuntu.pkr.hcl

    - name: Build image
      working-directory: ./packer
      run: |
        packer build \
          -var "ubuntu_version=${{ env.UBUNTU_VERSION }}" \
          -var "output_directory=../output" \
          ubuntu.pkr.hcl

    - name: Prepare release artifacts
      run: |
        cd output
        IMAGE_NAME="ubuntu-${{ env.UBUNTU_VERSION }}-$(date +%Y%m%d).img"
        mv *.img "$IMAGE_NAME"
        
        # Create checksum
        sha256sum "$IMAGE_NAME" > "${IMAGE_NAME}.sha256"
        
        # Compress for faster download
        gzip "$IMAGE_NAME"

    - name: Create Release
      uses: softprops/action-gh-release@v2
      with:
        tag_name: v$(date +%Y%m%d-%H%M)
        name: Ubuntu ${{ env.UBUNTU_VERSION }} $(date +%Y-%m-%d)
        files: |
          output/*.img.gz
          output/*.sha256
        body: |
          ## Ubuntu ${{ env.UBUNTU_VERSION }} with eBPF Runtime Support
          
          **Included packages (minimal runtime):**
          - libbpf1 (eBPF runtime library)
          - Standard utilities (wget, curl, net-tools)
          
          **Features:**
          - BPF filesystem configured at `/sys/fs/bpf`
          - Ready for Cilium deployment
          - Minimal footprint (~500MB vs 2GB+ with dev tools)
          - Raw .img format (no conversion needed)
          
          **Usage:**
          ```
          gunzip ubuntu-${{ env.UBUNTU_VERSION }}-*.img.gz
          # For QEMU:
          qemu-system-x86_64 -hda ubuntu-${{ env.UBUNTU_VERSION }}-*.img -m 2048
          # For Proxmox: Upload .img directly as disk image
          ```
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Cleanup
      if: always()
      run: |
        sudo rm -rf output/
        sudo rm -rf packer_cache/

name: Build minimal Ubuntu eBPF image
on:
  push:
    branches: [main]
  schedule:
    - cron: '0 2 * * 1'
  workflow_dispatch:

env:
  UBUNTU_VERSION: "24.04"

jobs:
  build-image:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    
    steps:
    - name: Checkout
      uses: actions/checkout@v4
    
    - name: Install build tools
      run: |
        sudo apt-get update
        sudo apt-get install -y qemu-utils qemu-system-x86-64 wget
        sudo modprobe nbd max_part=16
    
    - name: Download base image
      run: |
        wget https://cloud-images.ubuntu.com/releases/${{ env.UBUNTU_VERSION }}/release/ubuntu-${{ env.UBUNTU_VERSION }}-server-cloudimg-amd64.img
    
    - name: Customize image using qemu-nbd
      run: |
        # Connect the image as a network block device
        sudo qemu-nbd -c /dev/nbd0 ubuntu-${{ env.UBUNTU_VERSION }}-server-cloudimg-amd64.img
        sleep 2
        
        # Create mount point and mount the filesystem
        sudo mkdir -p /mnt/ubuntu-image
        sudo mount /dev/nbd0p1 /mnt/ubuntu-image
        
        # Prepare for chroot
        sudo mount --bind /dev /mnt/ubuntu-image/dev
        sudo mount --bind /proc /mnt/ubuntu-image/proc
        sudo mount --bind /sys /mnt/ubuntu-image/sys
        
        # Handle resolv.conf properly
        if [ -L /mnt/ubuntu-image/etc/resolv.conf ]; then
          sudo rm /mnt/ubuntu-image/etc/resolv.conf
        fi
        sudo cp /etc/resolv.conf /mnt/ubuntu-image/etc/resolv.conf
        
        # Create and run customization script
        cat > customize_script.sh << 'EOF'
        #!/bin/bash
        set -e
        export DEBIAN_FRONTEND=noninteractive
        apt-get update
        apt-get install -y linux-headers-generic bpftool libbpf1 clang wget net-tools qemu-guest-agent
        echo "bpffs /sys/fs/bpf bpf defaults 0 0" >> /etc/fstab
        mkdir -p /sys/fs/bpf
        apt-get clean
        rm -rf /var/lib/apt/lists/*
        EOF
        
        chmod +x customize_script.sh
        sudo cp customize_script.sh /mnt/ubuntu-image/tmp/
        
        # Run customization in chroot
        sudo chroot /mnt/ubuntu-image /tmp/customize_script.sh
        
        # Clean up
        sudo rm /mnt/ubuntu-image/tmp/customize_script.sh
        sudo rm /mnt/ubuntu-image/etc/resolv.conf
        
        # Restore original resolv.conf symlink if it existed
        if [ ! -f /mnt/ubuntu-image/etc/resolv.conf ]; then
          sudo chroot /mnt/ubuntu-image ln -sf ../run/systemd/resolve/stub-resolv.conf /etc/resolv.conf
        fi
        
        # Unmount everything
        sudo umount /mnt/ubuntu-image/dev
        sudo umount /mnt/ubuntu-image/proc  
        sudo umount /mnt/ubuntu-image/sys
        sudo umount /mnt/ubuntu-image
        sudo qemu-nbd -d /dev/nbd0
        
        # Rename with date
        mv ubuntu-${{ env.UBUNTU_VERSION }}-server-cloudimg-amd64.img ubuntu-ebpf-$(date +%Y%m%d).img
    
    - name: Create release
      uses: softprops/action-gh-release@v2
      with:
        tag_name: v$(date +%Y%m%d)
        name: Ubuntu eBPF $(date +%Y-%m-%d)
        files: ubuntu-ebpf-*.img
        body: |
          Minimal Ubuntu ${{ env.UBUNTU_VERSION }} with eBPF support
          
          Packages: linux-headers-generic, bpftool, libbpf1, clang, wget, net-tools, qemu-guest-agent
          BPF filesystem configured at /sys/fs/bpf
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

name: Build minimal Ubuntu eBPF image

on:
  push:
    branches: [main]
  schedule:
    - cron: '0 2 * * 1'
  workflow_dispatch:

env:
  UBUNTU_VERSION: "24.04"

jobs:
  build-image:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    
    steps:
    - name: Checkout
      uses: actions/checkout@v4
    
    - name: Install build tools
      run: |
        sudo apt-get update
        sudo apt-get install -y libguestfs-tools qemu-utils wget
        
    - name: Configure libguestfs
      run: |
        # Disable supermin appliance to avoid passt issues
        sudo mkdir -p /etc/libguestfs
        echo 'export LIBGUESTFS_BACKEND=direct' | sudo tee /etc/libguestfs/libguestfs.conf
        export LIBGUESTFS_BACKEND=direct
    
    - name: Download base image
      run: |
        wget https://cloud-images.ubuntu.com/releases/${{ env.UBUNTU_VERSION }}/release/ubuntu-${{ env.UBUNTU_VERSION }}-server-cloudimg-amd64.img
    
    - name: Customize image
      run: |
        export LIBGUESTFS_BACKEND=direct
        
        # Create customization script
        cat > customize_script.sh << 'EOF'
        #!/bin/bash
        set -e
        apt-get update
        apt-get install -y linux-headers-generic bpftool libbpf1 clang wget net-tools qemu-guest-agent
        echo "bpffs /sys/fs/bpf bpf defaults 0 0" >> /etc/fstab
        mkdir -p /sys/fs/bpf
        apt-get clean
        rm -rf /var/lib/apt/lists/*
        EOF
        
        # Apply customizations
        sudo virt-customize -a ubuntu-${{ env.UBUNTU_VERSION }}-server-cloudimg-amd64.img \
          --copy-in customize_script.sh:/tmp/ \
          --run-command 'chmod +x /tmp/customize_script.sh' \
          --run-command '/tmp/customize_script.sh' \
          --run-command 'rm /tmp/customize_script.sh'
        
        # Rename with date
        mv ubuntu-${{ env.UBUNTU_VERSION }}-server-cloudimg-amd64.img ubuntu-ebpf-$(date +%Y%m%d).img
    
    - name: Verify eBPF tools
      run: |
        export LIBGUESTFS_BACKEND=direct
        sudo virt-ls -a ubuntu-ebpf-$(date +%Y%m%d).img /usr/sbin/bpftool || echo "bpftool verification failed"
    
    - name: Create release
      uses: softprops/action-gh-release@v2
      with:
        tag_name: v$(date +%Y%m%d)
        name: Ubuntu eBPF $(date +%Y-%m-%d)
        files: ubuntu-ebpf-*.img
        body: |
          Minimal Ubuntu ${{ env.UBUNTU_VERSION }} with eBPF support
          
          Packages: linux-headers-generic, bpftool, libbpf1, clang
          BPF filesystem configured at /sys/fs/bpf
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
